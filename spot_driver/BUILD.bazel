
load("@humble//ros:defs.bzl", "ros")
load("@pip//:requirements.bzl", "all_whl_requirements_by_package", "requirement")
load("@aspect_rules_py//py:defs.bzl", "py_library", "resolutions")

package(default_visibility = ["//visibility:public"])

ros.package_manifest(
    name = "pkg",
    package_name = "spot_driver",
)

ros.cc_library(
    name = "spot_driver",
    package = ":pkg",
    srcs = [
        "src/api/default_kinematic_api.cpp",
        "src/api/default_image_client.cpp",
        "src/api/default_lease_client.cpp",
        "src/api/default_spot_api.cpp",
        "src/api/default_state_client.cpp",
        "src/api/default_time_sync_api.cpp",
        "src/api/default_world_object_client.cpp",
        "src/api/spot_image_sources.cpp",
        "src/conversions/common_conversions.cpp",
        "src/conversions/decompress_images.cpp",
        "src/conversions/geometry.cpp",
        "src/conversions/kinematic_conversions.cpp",
        "src/conversions/robot_state.cpp",
        "src/conversions/time.cpp",
        "src/images/spot_image_publisher.cpp",
        "src/images/images_middleware_handle.cpp",
        "src/images/spot_image_publisher_node.cpp",
        "src/interfaces/rclcpp_clock_interface.cpp",
        "src/interfaces/rclcpp_logger_interface.cpp",
        "src/interfaces/rclcpp_node_interface.cpp",
        "src/interfaces/rclcpp_parameter_interface.cpp",
        "src/interfaces/rclcpp_tf_broadcaster_interface.cpp",
        "src/interfaces/rclcpp_tf_listener_interface.cpp",
        "src/interfaces/rclcpp_wall_timer_interface.cpp",
        "src/lease/lease_manager.cpp",
        "src/lease/lease_manager_node.cpp",
        "src/lease/lease_middleware_handle.cpp",
        "src/kinematic/kinematic_node.cpp",
        "src/kinematic/kinematic_service.cpp",
        "src/kinematic/kinematic_middleware_handle.cpp",
        "src/object_sync/object_synchronizer.cpp",
        "src/object_sync/object_synchronizer_node.cpp",
        "src/robot_state/state_middleware_handle.cpp",
        "src/robot_state/state_publisher.cpp",
        "src/robot_state/state_publisher_node.cpp",
    ],
    hdrs = glob([
        "include/spot_driver/**/*.hpp",
    ]),
    includes = ["include"],
    deps = [
        "@humble//:ros-humble-bondcpp",
        "@humble//:bosdyn-api-msgs",
        "@humble//:bosdyn-spot-api-msgs",
        "@humble//:ros-humble-cv-bridge",
        "@humble//:ros-humble-geometry-msgs",
        "@humble//:ros-humble-image-transport",
        "@humble//:ros-humble-message-filters",
        "@humble//:ros-humble-nav-msgs",
        "@humble//:ros-humble-rclcpp",
        "@humble//:ros-humble-rclcpp-components",
        "@humble//:ros-humble-sensor-msgs",
        "@humble//:ros-humble-std-srvs",
        "@humble//:ros-humble-tf2-eigen",
        "@humble//:ros-humble-tf2-ros",
        "@humble//:ros-humble-tl-expected",
        "@humble//:spot-cpp-sdk",
        "//spot_msgs:spot_msgs",
    ],
    copts = [
        "-std=c++17",
        "-Wall",
        "-Wextra",
        "-Wpedantic",
    ],
)

ros.cc_binary(
    name = "spot_image_publisher_node",
    package = ":pkg",
    srcs = ["src/images/spot_image_publisher_node_main.cpp"],
    includes = ["include"],
    deps = [":spot_driver"],
    copts = [
        "-std=c++17",
    ],
)

ros.cc_binary(
    name = "state_publisher_node",
    package = ":pkg",
    srcs = ["src/robot_state/state_publisher_node_main.cpp"],
    includes = ["include"],
    deps = [":spot_driver"],
    copts = [
        "-std=c++17",
    ],
)

ros.cc_binary(
    name = "lease_manager_node",
    package = ":pkg",
    srcs = ["src/lease/lease_manager_node_main.cpp"],
    includes = ["include"],
    deps = [":spot_driver"],
    copts = [
        "-std=c++17",
    ],
)

ros.cc_binary(
    name = "spot_inverse_kinematics_node",
    package = ":pkg",
    srcs = ["src/kinematic/kinematic_node_main.cpp"],
    includes = ["include"],
    deps = [":spot_driver"],
    copts = [
        "-std=c++17",
    ],
)

ros.cc_binary(
    name = "object_synchronizer_node",
    package = ":pkg",
    srcs = ["src/object_sync/object_synchronizer_node_main.cpp"],
    includes = ["include"],
    deps = [":spot_driver"],
    copts = [
        "-std=c++17",
    ],
)

ros.cc_binary(
    name = "image_stitcher_node",
    package = ":pkg",
    srcs = [
        "src/image_stitcher/image_stitcher.cpp",
        "src/image_stitcher/image_stitcher_node.cpp",
    ],
    includes = ["include"],
    deps = [
        ":spot_driver",
        "@humble//:ros-humble-bondcpp",
        "@humble//:bosdyn-api-msgs",
        "@humble//:bosdyn-spot-api-msgs",
        "@humble//:ros-humble-cv-bridge",
        "@humble//:ros-humble-geometry-msgs",
        "@humble//:ros-humble-image-transport",
        "@humble//:ros-humble-message-filters",
        "@humble//:ros-humble-nav-msgs",
        "@humble//:ros-humble-rclcpp",
        "@humble//:ros-humble-rclcpp-components",
        "@humble//:ros-humble-sensor-msgs",
        "@humble//:ros-humble-std-srvs",
        "@humble//:ros-humble-tf2-eigen",
        "@humble//:ros-humble-tf2-ros",
        "@humble//:ros-humble-tl-expected",
        "//spot_msgs:spot_msgs",
    ],
    copts = [
        "-std=c++17",
    ],
)

[
    ros.component(
        name = name,
        srcs = [component_src],
        hdrs = glob([
            "include/spot_driver/**/*.hpp",
        ]),
        class_name = class_name,
        includes = ["include"],
        package = ":pkg",
        deps = [
            ":spot_driver",
            "@humble//:ros-humble-rclcpp-components",
        ],
        copts = [
            "-std=c++17",
        ],
    )
    for name, component_src, class_name in [
        ("spot_image_publisher_component", "src/images/spot_image_publisher_component.cpp", "spot_ros2::images::SpotImagePublisherNode"),
        ("state_publisher_component", "src/robot_state/state_publisher_component.cpp", "spot_ros2::StatePublisherNode"),
        ("lease_manager_component", "src/lease/lease_manager_component.cpp", "spot_ros2::LeaseManagerNode"),
        ("spot_inverse_kinematics_component", "src/kinematic/kinematic_component.cpp", "spot_ros2::kinematic::KinematicNode"),
    ]
]


ros.component_library(
    name = "spot_driver_components",
    components = [
        ":spot_image_publisher_component",
        ":state_publisher_component",
        ":lease_manager_component",
        ":spot_inverse_kinematics_component",
    ],
    package = ":pkg",
)

py_library(
    name = "spot_driver_py",
    srcs = glob([
        "spot_driver/**/*.py",
    ]),
    data = [
        "spot_driver/spot_ros2.py",
        "spot_driver/calibrated_reregistered_hand_camera_depth_publisher.py",
        "spot_driver/spot_alerts.py",
    ],
    deps = [
        "@humble//:ros-humble-rclpy",
        "@humble//:ros-humble-std-msgs",
        "@humble//:ros-humble-sensor-msgs",
        "@humble//:ros-humble-geometry-msgs",
        "@humble//:ros-humble-nav-msgs",
        "@humble//:ros-humble-tf2-ros",
        "@humble//:ros-humble-cv-bridge",
        "@humble//:ros-humble-image-transport",
        "@humble//:ros-humble-message-filters",
        "@humble//:ros-humble-tf2-eigen",
        "//spot_msgs:spot_msgs",
    ],
)

ros.py_binary(
    name = "spot_ros2_py",
    package = ":pkg",
    srcs = ["spot_driver/spot_ros2.py"],
    main = "spot_ros2.py",
    deps = [":spot_driver_py"],
)

ros.py_binary(
    name = "calibrated_reregistered_hand_camera_depth_publisher_py",
    package = ":pkg",
    srcs = ["spot_driver/calibrated_reregistered_hand_camera_depth_publisher.py"],
    main = "calibrated_reregistered_hand_camera_depth_publisher.py",
    deps = [":spot_driver_py"],
)

ros.py_binary(
    name = "spot_alerts_py",
    package = ":pkg",
    srcs = ["spot_driver/spot_alerts.py"],
    main = "spot_alerts.py",
    deps = [":spot_driver_py"],
)

ros.filegroup(
    name = "share",
    srcs = glob([
        "launch/**/*",
        "config/**/*",
        "rviz/**/*",
    ]),
    ignore_parent_directories = False,
    prefix = "share/spot_driver",
    strip_prefix = "spot_driver",
    env_paths = {
        "AMENT_PREFIX_PATH": [
            "share/spot_driver/launch/",
            "share/spot_driver/config/",
            "share/spot_driver/rviz/",
        ],
    },
)

py_library(
    name = "resolutions_lib",
    deps = [
        "@ros_utilities//synchros2",
        "//spot_common:spot_common",
        "@pip//pytest",
        "@pip//pyyaml",
        "@pip//lark",
    ],
    resolutions = resolutions.from_requirements(
        all_whl_requirements_by_package,
        requirement
    ).to_label_keyed_dict(),
)

[
    ros.launch(
        name = name,
        package_name = "spot_driver",
        launch_file_name = launch_file,
        data = [
            ":share",
            ":pkg",
            ":spot_driver_components",
            "//spot_msgs:spot_msgs",
            "@humble//:ros-humble-rclcpp",
            "@humble//:ros-humble-rclpy",
            "@humble//:ros-humble-tf2-ros",
            "@humble//:ros-humble-cv-bridge",
            "@humble//:ros-humble-image-transport",
            "@humble//:ros-humble-message-filters",
            "@humble//:ros-humble-tf2-eigen",
        ],
        deps = [
            ":resolutions_lib",
        ],
        package_collisions = "ignore",
        visibility = ["//visibility:public"]
    )
    for name, launch_file in [
        ("spot_driver_launch", "spot_driver.launch.py"),
        ("spot_image_publisher_launch", "spot_image_publisher.launch.py"),
        ("spot_state_publisher_launch", "spot_state_publisher.launch.py"),
        ("spot_lease_manager_launch", "spot_lease_manager.launch.py"),
        ("spot_inverse_kinematics_launch", "spot_inverse_kinematics.launch.py"),
        ("spot_object_synchronizer_launch", "spot_object_synchronizer.launch.py"),
        ("spot_image_stitcher_launch", "spot_image_stitcher.launch.py"),
    ]
]

[
    ros.cc_test(
        name = test_file.replace(".cpp", "").replace("test/", ""),
        srcs = [test_file],
        deps = [
            ":spot_driver",
            "@googletest//:gtest_main",
            "@humble//:ros-humble-ament-index-cpp",
            "@humble//:ros-humble-rclcpp",
        ],
        copts = [
            "-std=c++17",
        ],
    )
    for test_file in glob(["test/**/*.cpp"])
]

[
    ros.py_test(
        name = test_file.replace(".py", "").replace("test/", ""),
        srcs = [test_file],
        pytest_main = True,
        deps = [
            ":resolutions_lib",
            ":spot_driver_py",
            "@humble//:ros-humble-rclpy",
        ],
        env = {
            "ROS_LOG_DIR": ".",
        },
        package_collisions = "ignore",
        timeout = "long",
    )
    for test_file in glob(["test/pytests/*.py"])
]